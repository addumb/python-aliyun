Message-ID: <1640486748.7837.1490411651129.JavaMail.confluence@qoffice4>
Subject: Exported From Confluence
MIME-Version: 1.0
Content-Type: multipart/related; 
	boundary="----=_Part_7836_1714941305.1490411651128"

------=_Part_7836_1714941305.1490411651128
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Content-Location: file:///C:/exported.html

<html xmlns:o=3D'urn:schemas-microsoft-com:office:office'
      xmlns:w=3D'urn:schemas-microsoft-com:office:word'
      xmlns:v=3D'urn:schemas-microsoft-com:vml'
      xmlns=3D'urn:w3-org-ns:HTML'>
<head>
    <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dutf-8=
">
    <title>V4 Performance Improvements on Aliyun in 2015 - Online and Offli=
ne</title>
    <!--[if gte mso 9]>
    <xml>
        <o:OfficeDocumentSettings>
            <o:TargetScreenSize>1024x640</o:TargetScreenSize>
            <o:PixelsPerInch>72</o:PixelsPerInch>
            <o:AllowPNG/>
        </o:OfficeDocumentSettings>
        <w:WordDocument>
            <w:View>Print</w:View>
            <w:Zoom>90</w:Zoom>
            <w:DoNotOptimizeForBrowser/>
        </w:WordDocument>
    </xml>
    <![endif]-->
    <style>
                <!--
        @page Section1 {
            size: 8.5in 11.0in;
            margin: 1.0in;
            mso-header-margin: .5in;
            mso-footer-margin: .5in;
            mso-paper-source: 0;
        }

        td {
            page-break-inside: avoid;
        }

        tr {
            page-break-after: avoid;
        }

        div.Section1 {
            page: Section1;
        }

        /* Confluence print stylesheet. Common to all themes for print medi=
a */
/* Full of !important until we improve batching for print CSS */

#main {
    padding-bottom: 1em !important; /* The default padding of 6em is too mu=
ch for printouts */
}

body {
    font-family: Arial, Helvetica, FreeSans, sans-serif;
    font-size: 10pt;
    line-height: 1.2;
}

body, #full-height-container, #main, #page, #content, .has-personal-sidebar=
 #content {
    background: #fff    !important;
    color: #000         !important;
    border: 0           !important;
    width: 100%         !important;
    height: auto        !important;
    min-height: auto    !important;
    margin: 0           !important;
    padding: 0          !important;
    display: block      !important;
}

a, a:link, a:visited, a:focus, a:hover, a:active {
    color: #000;
}
#content h1,
#content h2,
#content h3,
#content h4,
#content h5,
#content h6 {
    font-family: Arial, Helvetica, FreeSans, sans-serif;
    page-break-after: avoid;
}
pre {
    font-family: Monaco, "Courier New", monospace;
}

#header,
.aui-header-inner,
#navigation,
#sidebar,
.sidebar,
#personal-info-sidebar,
.ia-fixed-sidebar,
.page-actions,
.navmenu,
.ajs-menu-bar,
.noprint,
.inline-control-link,
.inline-control-link a,
a.show-labels-editor,
.global-comment-actions,
.comment-actions,
.quick-comment-container,
#addcomment {
    display: none !important;
}

.comment .date::before {
    content: none !important; /* remove middot for print view */
}

h1.pagetitle img {
    height: auto;
    width: auto;
}

.print-only {
    display: block;
}
#footer {
    position: relative !important; /* CONF-17506 Place the footer at end of=
 the content */
    margin: 0;
    padding: 0;
    background: none;
    clear: both;
}

#poweredby {
    border-top: none;
    background: none;
}

#poweredby li.print-only {
    display: list-item;
    font-style: italic;
}

#poweredby li.noprint {
    display:none;
}


/* no width controls in print */
.wiki-content .table-wrap,
.wiki-content p,
.panel .codeContent,
.panel .codeContent pre,
.image-wrap {
    overflow: visible !important;
}

/* TODO - should this work? */
#children-section,
#comments-section .comment,
#comments-section .comment .comment-body,
#comments-section .comment .comment-content,
#comments-section .comment p {
    page-break-inside: avoid;
}

#page-children a {
    text-decoration: none;
}

/**
 hide twixies

 the specificity here is a hack because print styles
 are getting loaded before the base styles. */
#comments-section.pageSection .section-header,
#comments-section.pageSection .section-title,
#children-section.pageSection .section-header,
#children-section.pageSection .section-title,
.children-show-hide {
    padding-left: 0;
    margin-left: 0;
}

.children-show-hide.icon {
    display: none;
}

/* personal sidebar */
.has-personal-sidebar #content {
    margin-right: 0px;
}

.has-personal-sidebar #content .pageSection {
    margin-right: 0px;
}
-->
    </style>
</head>
<body>
    <h1>V4 Performance Improvements on Aliyun in 2015 - Online and Offline<=
/h1>
    <div class=3D"Section1">
        <p style=3D"margin-left: 36.0pt;">&nbsp;</p>
<p><style type=3D"text/css">/*<![CDATA[*/
div.rbtoc1490411651033 {padding: 0px;}
div.rbtoc1490411651033 ul {list-style: disc;margin-left: 0px;}
div.rbtoc1490411651033 li {margin-left: 0px;padding-left: 0px;}

/*]]>*/</style></p>
<div class=3D"toc-macro rbtoc1490411651033">=20
<ul class=3D"toc-indentation">=20
<li><a href=3D"#V4PerformanceImprovementsonAliyunin2015-OnlineandOffline-Se=
archInsidePerformanceImprovementforShenma">SearchInside Performance Improve=
ment for Shenma</a></li>=20
<li><a href=3D"#V4PerformanceImprovementsonAliyunin2015-OnlineandOffline-Ap=
pSearchPipelinePerformanceImprovement">App Search Pipeline Performance Impr=
ovement</a></li>=20
<li><a href=3D"#V4PerformanceImprovementsonAliyunin2015-OnlineandOffline-De=
epSearchPerformanceImprovement-Indexer">Deep Search Performance Improvement=
 - Indexer</a></li>=20
<li><a href=3D"#V4PerformanceImprovementsonAliyunin2015-OnlineandOffline-De=
epSearchPerformanceImprovement-ContentPipeline">Deep Search Performance Imp=
rovement - Content Pipeline</a></li>=20
<li><a href=3D"#V4PerformanceImprovementsonAliyunin2015-OnlineandOffline-Au=
toSuggestPerformanceImprovement">AutoSuggest Performance Improvement</a></l=
i>=20
<li><a href=3D"#V4PerformanceImprovementsonAliyunin2015-OnlineandOffline-Qu=
ixeyNLP(Chineseanalyzer)">Quixey NLP (Chinese analyzer)</a></li>=20
</ul>=20
</div>
<p></p>
<hr />
<h3 id=3D"V4PerformanceImprovementsonAliyunin2015-OnlineandOffline-SearchIn=
sidePerformanceImprovementforShenma"><span style=3D"color: rgb(102,102,102)=
;font-size: 16.0px;line-height: 1.5625;">SearchInside Performance Improveme=
nt for Shenma</span></h3>
<p><strong><span style=3D"color: rgb(0,0,0);">Result</span></strong></p>
<p><span style=3D"color: rgb(0,0,0);">Initial test data before performance =
improvement =3D 4900ms at P95 and 300qps</span></p>
<p><span style=3D"color: rgb(0,0,0);">Original goal =3D 200ms at P95, 100ms=
 at P50</span></p>
<p><span style=3D"color: rgb(0,0,0);">After performance improvement =3D 87m=
s at P50, 160ms at P95, under 300qps</span></p>
<p><strong><span style=3D"color: rgb(0,0,0);">Notes: &nbsp;</span></strong>=
</p>
<ul>
<li><p><span>Content in Shenma environment (preprod04) index =3D Music vert=
ical only</span></p></li>
<li><p><span>Most but not all of these changes have been deployed to produc=
tion (since some of these have relevance impact). Please see the notes for =
each item below.</span></p></li>
</ul>
<p><strong><span style=3D"color: rgb(0,0,0);">Optimizations</span></strong>=
</p>
<ul>
<li><p><span>Rewrote the query rewriter module. The previous query builder =
logic is &quot;SHOULD&quot; logic for tokenized queries hitting sDescriptio=
n, sCondensed, sConcept, sTitle. There were too many hits in L1 resulting t=
o long response time, so we used common terms query to build the ES query. =
Please refer to </span><a href=3D"https://www.elastic.co/guide/en/elasticse=
arch/reference/current/query-dsl-common-terms-query.html" class=3D"external=
-link" rel=3D"nofollow"><span style=3D"color: rgb(17,85,204);text-decoratio=
n: underline;">Common-Terms-Query</span></a><span>. First it searches for d=
ocuments which match the more important terms. These are the terms which ap=
pear in fewer documents and have a greater impact on relevance.Then, it exe=
cutes a second query for the less important terms.&nbsp;</span><span style=
=3D"color: rgb(0,0,0);">With the adoption of common terms query, </span><st=
rong><span style=3D"line-height: 1.4285715;color: rgb(0,0,0);">P95 dropped =
from 4900ms to 1300ms.</span></strong></p><p><span style=3D"color: rgb(0,0,=
0);">Note: &nbsp;Currently </span><span style=3D"line-height: 1.4285715;">c=
ommon-terms-query is used in Aliyun stage03, prod03 and preprod04, but the =
code is only for Phoenix. But in pp04, operator for low freq word is 'AND',=
 while in stage03 and prod03, operator for low freq word is 'OR'. Using 'AN=
D' is much more faster, but recall less docs in L1.</span></p></li>
</ul>
<ul>
<li><p><span>Enable query cache in search. Since search-inside service only=
 returns top hit aggregation result to fastapi, we also change search_type =
to count to reduce content retrieved from ES. With the two optimizations, <=
/span><span>P95 dropped from 1300ms to 1200ms.</span></p><p><span style=3D"=
color: rgb(0,0,0);line-height: 1.4285715;">Note: &nbsp;This is applied in a=
ll environments, including US and China.</span></p></li>
</ul>
<ul>
<li><p><span>Introduced terminate_after in building query. This is to set t=
he maximum number of documents to collect for each shard, upon reaching whi=
ch the query execution will terminate early. Please refer to </span><a href=
=3D"https://www.elastic.co/guide/en/elasticsearch/client/java-api/current/j=
ava-search-terminate-after.html" class=3D"external-link" rel=3D"nofollow"><=
span style=3D"color: rgb(17,85,204);text-decoration: underline;">Terminate =
after</span></a><span>.&nbsp;</span><span style=3D"color: rgb(0,0,0);line-h=
eight: 1.4285715;">This had a negative impact on DCG. We can find a trade-o=
ff between search performance and relevance. Finally, online service team a=
nd DCG team agreed upon the terminate_after to be 400, which makes DCG drop=
s about 2%, which is acceptable.&nbsp;</span><span style=3D"color: rgb(0,0,=
0);">With the optimization, </span><span style=3D"color: rgb(0,0,0);">P95 d=
ropped from 1200ms to 800ms.</span></p><p><span style=3D"color: rgb(0,0,0);=
line-height: 1.4285715;">Note: &nbsp;terminate_after is only enabled in Chi=
na (not in US). Setting a lower number for terminate_after makes a signific=
ant difference in performance. e.g. In Aliyun preprod04, terminate_after is=
 set to 400 and the performance is 200ms at P95. In prod03, terminate_after=
 is set to 3000 and the performance is 1500ms at P95.</span></p></li>
</ul>
<ul>
<li><p><span>Removal of phrase_score features - </span><span>P95 dropped fr=
om 800ms to 760ms.</span></p><p><span style=3D"color: rgb(0,0,0);line-heigh=
t: 1.4285715;">Note: &nbsp;Applied in all environments, including US and Ch=
ina.</span></p></li>
</ul>
<ul>
<li><p><span>Reduce max results per app from 100 to 50. Shenma wants only 1=
 result per app, so we do not need to include 100 results per app in L1 lev=
el. This proved to have no negative impact on DCG. </span><span>P95 dropped=
 from 760ms to 580ms.</span></p><p><span style=3D"color: rgb(0,0,0);line-he=
ight: 1.4285715;">Note: &nbsp;Only applied in Aliyun PreProd04.</span></p><=
/li>
</ul>
<ul>
<li><p><span>Since cassandra's response time was a large portion of end-to-=
end time, and was unstable, we upgraded all cassandra instances, adjusted J=
VM parameter to use G1GC, adjusted the cache parameters, removed all non-mu=
sic meta data. Shenma project is interested in only deep search, we also re=
moved static-state-scoring and app-search. Finally, </span><span>P95 droppe=
d from 760ms to 430ms.</span></p><p><span style=3D"color: rgb(0,0,0);line-h=
eight: 1.4285715;">Note: &nbsp;Applied in Aliyun stage03, prod03, and prepr=
od04. Code only used for Phoenix.</span></p></li>
</ul>
<ul>
<li><p><span>An essential part of performance optimization in term-stat-plu=
gin. The term-stat retrieval logic was improved. </span><span>P95 dropped f=
rom 430ms to 270ms.</span></p><p><span style=3D"color: rgb(0,0,0);line-heig=
ht: 1.4285715;">Note: &nbsp;Applied in all environments including US and Ch=
ina. Note that US team would need to redeploy Elasticsearch cluster.</span>=
</p></li>
</ul>
<ul>
<li><p><span>Remove S_CONDENSED,S_AUTHOR in termstat fields, set up an inde=
pendent ES cluster for shenma to exclude the non-music content from index, =
adjusted the ES parameters=E2=80=A6=E2=80=A6 </span><span>P50 87ms, P95 160=
ms under 30QPS.</span><span> Performance data showed that our system capaci=
ty is P95 470ms under 430QPS.</span></p><p><span style=3D"color: rgb(0,0,0)=
;line-height: 1.4285715;">Note: &nbsp;Applied in Aliyun stage03, prod03, pr=
eprod04. Code only used for Phoenix.</span></p></li>
</ul>
<p><span><span><br /></span></span></p>
<hr />
<h3 id=3D"V4PerformanceImprovementsonAliyunin2015-OnlineandOffline-AppSearc=
hPipelinePerformanceImprovement"><span style=3D"color: rgb(102,102,102);">A=
pp Search Pipeline Performance Improvement</span></h3>
<p><strong><span style=3D"color: rgb(0,0,0);">Result</span></strong></p>
<p><span style=3D"color: rgb(0,0,0);">4 times faster: &nbsp;execution time =
reduced from 32 minutes to 7 minutes</span></p>
<p><strong><span style=3D"color: rgb(0,0,0);">Optimizations</span></strong>=
</p>
<ul>
<li style=3D"margin-left: 15.0px;"><p><span>Split input files from one big =
gzip files to several small files, to enable partitioning on input.</span><=
/p></li>
<li style=3D"margin-left: 15.0px;"><p><span>Remove FeatureExtractor module =
from app pipeline. Also removed language detection.</span></p></li>
<li style=3D"margin-left: 15.0px;"><p><span>Apply DirectFileOutputComitter.=
</span></p></li>
</ul>
<p><span style=3D"color: rgb(34,34,34);">Please refer to the experiment dat=
a here </span><span style=3D"color: rgb(17,85,204);text-decoration: underli=
ne;"><a href=3D"https://docs.google.com/spreadsheets/d/1aN9MlUMeEmaMQJlDzM4=
u1_2klXv1iasIRWZNj9c8pUY/edit#gid=3D1119211775" class=3D"external-link" rel=
=3D"nofollow">https://docs.google.com/spreadsheets/d/1aN9MlUMeEmaMQJlDzM4u1=
_2klXv1iasIRWZNj9c8pUY/edit#gid=3D1119211775</a></span></p>
<p><span style=3D"color: rgb(17,85,204);text-decoration: underline;"><br />=
</span></p>
<hr />
<h3 id=3D"V4PerformanceImprovementsonAliyunin2015-OnlineandOffline-DeepSear=
chPerformanceImprovement-Indexer"><span style=3D"color: rgb(102,102,102);li=
ne-height: 1.5;">Deep Search Performance Improvement - Indexer</span></h3>
<p><strong><span style=3D"color: rgb(0,0,0);">Result</span></strong></p>
<p><span style=3D"color: rgb(0,0,0);">5 times faster: &nbsp;Time for buildi=
ng index reduced from 4.5 hours to approx 45 min</span></p>
<p><strong><span style=3D"color: rgb(0,0,0);">Optimization</span></strong><=
/p>
<ul>
<li><p><span>SearchInside Indexer - batch indexing time reduced (PHNX-2183)=
</span></p></li>
</ul>
<div style=3D"margin-left: 0.0pt;">
<p>&nbsp;</p>
<div class=3D"table-wrap">
<table class=3D"confluenceTable">
<colgroup>
<col />
</colgroup>
<tbody>
<tr>
<td class=3D"confluenceTd"><p style=3D"margin-left: 36.0pt;"><span style=3D=
"color: rgb(34,34,34);">1. Disable index refresh interval on rebuilding big=
 new index, and recover index refresh interval after finishing.</span></p><=
p style=3D"margin-left: 36.0pt;"><span style=3D"color: rgb(34,34,34);">Outc=
ome: time cost reduced from 4.5 hours to 3.5 hours.</span></p><p style=3D"m=
argin-left: 36.0pt;"><span>Code merged for all environments for both US and=
 China.</span></p><br /><p style=3D"margin-left: 36.0pt;"><span style=3D"co=
lor: rgb(34,34,34);">2. Set sDescription not stored in index mapping. This =
can greatly reduce index size and building index time.</span></p><p style=
=3D"margin-left: 36.0pt;"><span style=3D"color: rgb(34,34,34);">Outcome: ti=
me cost reduced from 3.5 hours to 3 hours 8 min.</span></p><p style=3D"marg=
in-left: 36.0pt;"><span>Code merged for all environments for China only. </=
span></p><br /><p style=3D"margin-left: 36.0pt;"><span style=3D"color: rgb(=
34,34,34);">3. Split the indexing pipeline into two parts: create as many t=
hreads as possible for concurrently downloading oss files, and reasonable n=
umber of threads for batching index. The downloading threads are producers,=
 and the batching index threads are consumers. We want to make sure the ind=
exing threads are always busy, not waiting for downloading.</span></p><p st=
yle=3D"margin-left: 36.0pt;"><span style=3D"color: rgb(34,34,34);">Outcome:=
 time cost reduced from 3 hours 8 min to 2 hours 5 min.</span></p><p style=
=3D"margin-left: 36.0pt;"><span>Code merged for all environments for both U=
S and China. But the thread num of downloading and indexing are only tuned =
for China, We did not tune the parameters for US. The parameters matter muc=
h for indexing time cost.</span></p><p style=3D"margin-left: 36.0pt;"><span=
>Note: For aliyun environment, should use correct kloudy java SDK version: =
</span><span style=3D"color: rgb(0,128,0);">com.quixey.cloud.kloudy:cloud-d=
efault-platforms:0.35. </span>Version less than 0.35 has serious oss connec=
tion leak that causes indexer machine to crash if indexing more than 40 mil=
lion docs. We found the kloudy java SDK bug and fixed it in 0.35 version.</=
p><p style=3D"margin-left: 36.0pt;"><span style=3D"color: rgb(34,34,34);">4=
. Fix the java kloudy SDK oss endpoint issue.</span></p><p style=3D"margin-=
left: 36.0pt;"><span style=3D"color: rgb(34,34,34);">Outcome: time cost red=
uced from 2 hours 5 min to 45 min.</span></p><p style=3D"margin-left: 36.0p=
t;"><span>Code merged for all environments for only China. OSS issue is onl=
y for Aliyun.</span></p></td>
</tr>
</tbody>
</table>
</div>
<p>&nbsp;</p>
</div>
<ul>
<li><p><span>Now uses OSS endpoint and saves a lot of network traffic costs=
 (in $).</span></p></li>
<li><p><span>Applied several query optimization methods both in SearchInsid=
e and ElasticSearch plugins. Image below has the latency details.</span></p=
></li>
<li><p><span style=3D"color: rgb(34,34,34);">IIBE indexer update, supportin=
g several new features including rollback, moderate, and bug fixes.</span><=
/p></li>
<li><p><span>Removed 16 hosts (by removing qup-offline and ss-lookup)</span=
></p><p><span><br /></span></p></li>
</ul>
<p style=3D"margin-left: 30.0px;"><span style=3D"color: rgb(0,0,0);"><span>=
Chart of OneSearch optimization, based on the optimizations made for Shenma=
.</span></span></p>
<p><span style=3D"color: rgb(0,0,0);"><img class=3D"confluence-embedded-ima=
ge confluence-external-resource" alt=3D"PastedGraphic-2 copy.png" height=3D=
"217" width=3D"624" src=3D"https://lh5.googleusercontent.com/huJOynyWw_y3LG=
RLPf8is1mBajkLbixZEF8XHJLxN3TbeVujBh4bGYZ_ZX_WX8hUbDzHKvosaI4o7Pre3Rm54igrF=
JADHbFaTkPzSwAkNVxqO3OsJP8r3b05id_pnDfbPOmWMnpD" data-image-src=3D"https://=
lh5.googleusercontent.com/huJOynyWw_y3LGRLPf8is1mBajkLbixZEF8XHJLxN3TbeVujB=
h4bGYZ_ZX_WX8hUbDzHKvosaI4o7Pre3Rm54igrFJADHbFaTkPzSwAkNVxqO3OsJP8r3b05id_p=
nDfbPOmWMnpD" /></span></p>
<hr />
<h3 id=3D"V4PerformanceImprovementsonAliyunin2015-OnlineandOffline-DeepSear=
chPerformanceImprovement-ContentPipeline"><span style=3D"color: rgb(102,102=
,102);line-height: 1.5625;">Deep Search Performance Improvement - Content P=
ipeline</span></h3>
<p><strong><span style=3D"color: rgb(0,0,0);">Result</span></strong></p>
<p><span style=3D"color: rgb(0,0,0);"><span><span style=3D"color: rgb(0,0,0=
);">Average 10 times faster (different for different functions)</span></spa=
n>: &nbsp;e.g Dianping restaurants data run reduced from 5 hours to 30 minu=
tes</span></p>
<p><strong><span style=3D"color: rgb(0,0,0);">Optimizations</span></strong>=
</p>
<p><span style=3D"color: rgb(0,0,0);">Performance improvement achieved by a=
pplying several changes in dragon OSS driver and removed access to qup-offl=
ine.</span></p>
<ul>
<li><p><span>Compressed CP output in lzo format to reduce IO cost. (Note th=
at this was changed to gzip later.)</span></p></li>
<li><p><span>Tuned JVM parameters of Spark executors.</span></p></li>
<li><p><span>Removed the steps writing to _temporary output folder and rena=
me (PHNX-1131). T</span><span style=3D"line-height: 1.4285715;">his is also=
 called the </span><span style=3D"line-height: 1.4285715;">&quot;Direct out=
put committer&quot;, which is now part of hermes.</span></p></li>
<li><p><span>Install LZO codec in Hadoop clusters for efficiency during com=
pression and splittable ability to shorten running time.&nbsp;<span>This wa=
s applied to pre-content pipeline, but not on content pipeline.</span></spa=
n></p></li>
<li><p><span>Updated Quixey-dragon to work on new version of Spark cluster,=
 pointing OSS endpoint to OSS internal network. (Previously Spark I/O to OS=
S was going through Aliyun public network which would incur charges.)&nbsp;=
</span><span style=3D"line-height: 1.4285715;">Also fixed a bug in dragon o=
n error handling to reduce chances of partition failures.</span></p></li>
<li><p><span><span style=3D"color: rgb(0,0,0);">Compressed error output to =
reduce network transfer time.</span></span></p></li>
<li><span><span style=3D"color: rgb(0,0,0);">Tuned cache size to avoid perf=
ormance </span><span style=3D"color: rgb(0,0,0);">degradation</span><span s=
tyle=3D"color: rgb(0,0,0);"> on cache failures.</span></span></li>
</ul>
<p><span style=3D"color: rgb(0,0,0);">e.g. For app xiami.com music recordin=
g - it used to take around 1 hour for *each* step of CP processing, DV ETL,=
 and IIBE ETL. Baseline execution time was 49=E2=80=9919=E2=80=9D in total.=
 After these improvements, total execution time has been reduced to 14=E2=
=80=9928=E2=80=9D - 340% improvement.</span></p>
<p><span style=3D"color: rgb(0,0,0);">The results are available at </span><=
span style=3D"color: rgb(17,85,204);text-decoration: underline;"><a href=3D=
"https://docs.google.com/spreadsheets/d/1aN9MlUMeEmaMQJlDzM4u1_2klXv1iasIRW=
ZNj9c8pUY/edit" class=3D"external-link" rel=3D"nofollow">https://docs.googl=
e.com/spreadsheets/d/1aN9MlUMeEmaMQJlDzM4u1_2klXv1iasIRWZNj9c8pUY/edit</a><=
/span></p>
<p><span style=3D"color: rgb(34,34,34);">Here are some data to support </sp=
an><a href=3D"https://github.com/quixey/content-engine/pull/157" class=3D"e=
xternal-link" rel=3D"nofollow"><span style=3D"color: rgb(17,85,204);text-de=
coration: underline;">https://github.com/quixey/content-engine/pull/157</sp=
an></a><span style=3D"color: rgb(34,34,34);">&nbsp;&nbsp;</span></p>
<p>&nbsp;</p>
<hr />
<h3 id=3D"V4PerformanceImprovementsonAliyunin2015-OnlineandOffline-AutoSugg=
estPerformanceImprovement"><span style=3D"color: rgb(102,102,102);line-heig=
ht: 1.5625;">AutoSuggest Performance Improvement</span></h3>
<p><strong><span style=3D"color: rgb(0,0,0);">Result</span></strong></p>
<p><span style=3D"color: rgb(0,0,0);">4 times faster: &nbsp;Reduced from 13=
0ms to 33ms (internal test data before integration with Alibaba)</span></p>
<p><strong><span style=3D"color: rgb(0,0,0);">Optimization</span></strong><=
/p>
<p><span style=3D"color: rgb(0,0,0);">AutoSuggest now uses minimal response=
 and this removes all AutoSuggest traffic to Cassandra.</span></p>
<p>&nbsp;</p>
<hr />
<h3 id=3D"V4PerformanceImprovementsonAliyunin2015-OnlineandOffline-QuixeyNL=
P(Chineseanalyzer)"><span style=3D"color: rgb(102,102,102);font-size: 16.0p=
x;line-height: 1.5625;">Quixey NLP (Chinese analyzer)</span></h3>
<p><strong><span style=3D"color: rgb(34,34,34);">Result</span></strong></p>
<p><span style=3D"color: rgb(34,34,34);">6 times faster: &nbsp;Average time=
 reduced from 10ms to 1.5ms</span></p>
<p><span style=3D"color: rgb(34,34,34);">This also freed 12 hosts used for =
NLP offline, and&nbsp;<span><span style=3D"color: rgb(34,34,34);">reduced t=
he number of online NLP hosts.</span></span></span></p>
<p><strong><span style=3D"color: rgb(0,0,0);">Optimization</span></strong><=
/p>
<p><span style=3D"color: rgb(0,0,0);">Replace Alibaba NLP (Natural Language=
 Processor) with the Chinese analyzer that was developed internally at Quix=
ey.</span></p>
<p>&nbsp;</p>
<hr />
<p><span><span><br /></span></span></p>
<p>&nbsp;</p>
    </div>
</body>
</html>
------=_Part_7836_1714941305.1490411651128--
